<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>How to print maximum number of A's using given four keys</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="how-to-print-maximum-number-of-as-using-given-four-keys" class="section level1">
<h1>How to print maximum number of A's using given four keys</h1>
<p>This is a famous interview question asked in <a href="http://www.careercup.com/question?id=7184083">Google</a>, <a href="http://www.geeksforgeeks.org/one97paytm-interview-experience/">Paytm</a> and many other company interviews.</p>
<p>Below is the problem statement.<span id="more-134437"></span></p>
<pre><code> 
Imagine you have a special keyboard with the following keys: 
Key 1:  Prints &#39;A&#39; on screen
Key 2: (Ctrl-A): Select screen
Key 3: (Ctrl-C): Copy selection to buffer
Key 4: (Ctrl-V): Print buffer on screen appending it
                 after what has already been printed. 

If you can only press the keyboard for N times (with the above four
keys), write a program to produce maximum numbers of A&#39;s. That is to
say, the input parameter is N (No. of keys that you can press), the 
output is M (No. of As that you can produce). </code></pre>
<p>Examples:</p>
<pre><code> 
Input:  N = 3
Output: 3
We can at most get 3 A&#39;s on screen by pressing 
following key sequence.
A, A, A

Input:  N = 7
Output: 9
We can at most get 9 A&#39;s on screen by pressing 
following key sequence.
A, A, A, Ctrl A, Ctrl C, Ctrl V, Ctrl V

Input:  N = 11
Output: 27
We can at most get 27 A&#39;s on screen by pressing 
following key sequence.
A, A, A, Ctrl A, Ctrl C, Ctrl V, Ctrl V, Ctrl A, 
Ctrl C, Ctrl V, Ctrl V </code></pre>
<p><strong>We strongly recommend to minimize your browser and try this yourself first.</strong></p>
<p>Below are few important points to note.<br /> a) For N 6).<br /> The task is to find out the break=point after which we get the above suffix of keystrokes. Definition of a breakpoint is that instance after which we need to only press Ctrl-A, Ctrl-C once and the only Ctrl-V’s afterwards to generate the optimal length. If we loop from N-3 to 1 and choose each of these values for the break-point, and compute that optimal string they would produce. Once the loop ends, we will have the maximum of the optimal lengths for various breakpoints, thereby giving us the optimal length for N keystrokes.</p>
<p>Below is C implementation based on above idea.</p>
<pre><code> 
/* A recursive C program to print maximum number of A&#39;s using 
   following four keys */
#include&lt;stdio.h&gt;

// A recursive function that returns the optimal length string 
// for N keystrokes
int findoptimal(int N)
{
    // The optimal string length is N when N is smaller than 7
    if (N &lt;= 6)
        return N;

    // Initialize result
    int max = 0;

    // TRY ALL POSSIBLE BREAK-POINTS
    // For any keystroke N, we need to loop from N-3 keystrokes
    // back to 1 keystroke to find a breakpoint &#39;b&#39; after which we
    // will have Ctrl-A, Ctrl-C and then only Ctrl-V all the way.
    int b;
    for (b=N-3; b&gt;=1; b--)
    {
            // If the breakpoint is s at b&#39;th keystroke then
            // the optimal string would have length
            // (n-b-1)*screen[b-1];
            int curr = (N-b-1)*findoptimal(b);
            if (curr &gt; max)
                max = curr;
     }
     return max;
}

// Driver program
int main()
{
    int N;

    // for the rest of the array we will rely on the previous
    // entries to compute new ones
    for (N=1; N&lt;=20; N++)
        printf(&quot;Maximum Number of A&#39;s with %d keystrokes is %d\n&quot;,
               N, findoptimal(N));
}
 </code></pre>
<p>Output:</p>
<pre><code> Maximum Number of A&#39;s with 1 keystrokes is 1
Maximum Number of A&#39;s with 2 keystrokes is 2
Maximum Number of A&#39;s with 3 keystrokes is 3
Maximum Number of A&#39;s with 4 keystrokes is 4
Maximum Number of A&#39;s with 5 keystrokes is 5
Maximum Number of A&#39;s with 6 keystrokes is 6
Maximum Number of A&#39;s with 7 keystrokes is 9
Maximum Number of A&#39;s with 8 keystrokes is 12
Maximum Number of A&#39;s with 9 keystrokes is 16
Maximum Number of A&#39;s with 10 keystrokes is 20
Maximum Number of A&#39;s with 11 keystrokes is 27
Maximum Number of A&#39;s with 12 keystrokes is 36
Maximum Number of A&#39;s with 13 keystrokes is 48
Maximum Number of A&#39;s with 14 keystrokes is 64
Maximum Number of A&#39;s with 15 keystrokes is 81
Maximum Number of A&#39;s with 16 keystrokes is 108
Maximum Number of A&#39;s with 17 keystrokes is 144
Maximum Number of A&#39;s with 18 keystrokes is 192
Maximum Number of A&#39;s with 19 keystrokes is 256
Maximum Number of A&#39;s with 20 keystrokes is 324 </code></pre>
<p>The above function computes the same subproblems again and again. Recomputations of same subproblems can be avoided by storing the solutions to subproblems and solving problems in bottom up manner.</p>
<p>Below is Dynamic Programming based C implementation where an auxiliary array screen[N] is used to store result of subproblems.</p>
<pre><code> 
/* A Dynamic Programming based C program to find maximum number of A&#39;s
   that can be printed using four keys */
#include&lt;stdio.h&gt;

// this function returns the optimal length string for N keystrokes
int findoptimal(int N)
{
    // The optimal string length is N when N is smaller than 7
    if (N &lt;= 6)
        return N;

    // An array to store result of subproblems
    int screen[N];

    int b;  // To pick a breakpoint

    // Initializing the optimal lengths array for uptil 6 input
    // strokes.
    int n;
    for (n=1; n&lt;=6; n++)
        screen[n-1] = n;

    // Solve all subproblems in bottom manner
    for (n=7; n&lt;=N; n++)
    {
        // Initialize length of optimal string for n keystrokes
        screen[n-1] = 0;

        // For any keystroke n, we need to loop from n-3 keystrokes
        // back to 1 keystroke to find a breakpoint &#39;b&#39; after which we
        // will have ctrl-a, ctrl-c and then only ctrl-v all the way.
        for (b=n-3; b&gt;=1; b--)
        {
            // if the breakpoint is at b&#39;th keystroke then
            // the optimal string would have length
            // (n-b-1)*screen[b-1];
            int curr = (n-b-1)*screen[b-1];
            if (curr &gt; screen[n-1])
                screen[n-1] = curr;
        }
    }

    return screen[N-1];
}

// Driver program
int main()
{
    int N;

    // for the rest of the array we will rely on the previous
    // entries to compute new ones
    for (N=1; N&lt;=20; N++)
        printf(&quot;Maximum Number of A&#39;s with %d keystrokes is %d\n&quot;,
               N, findoptimal(N));
}
 </code></pre>
<p>Output:</p>
<pre><code> 
Maximum Number of A&#39;s with 1 keystrokes is 1
Maximum Number of A&#39;s with 2 keystrokes is 2
Maximum Number of A&#39;s with 3 keystrokes is 3
Maximum Number of A&#39;s with 4 keystrokes is 4
Maximum Number of A&#39;s with 5 keystrokes is 5
Maximum Number of A&#39;s with 6 keystrokes is 6
Maximum Number of A&#39;s with 7 keystrokes is 9
Maximum Number of A&#39;s with 8 keystrokes is 12
Maximum Number of A&#39;s with 9 keystrokes is 16
Maximum Number of A&#39;s with 10 keystrokes is 20
Maximum Number of A&#39;s with 11 keystrokes is 27
Maximum Number of A&#39;s with 12 keystrokes is 36
Maximum Number of A&#39;s with 13 keystrokes is 48
Maximum Number of A&#39;s with 14 keystrokes is 64
Maximum Number of A&#39;s with 15 keystrokes is 81
Maximum Number of A&#39;s with 16 keystrokes is 108
Maximum Number of A&#39;s with 17 keystrokes is 144
Maximum Number of A&#39;s with 18 keystrokes is 192
Maximum Number of A&#39;s with 19 keystrokes is 256
Maximum Number of A&#39;s with 20 keystrokes is 324 </code></pre>
<p>Thanks to <strong>Gaurav Saxena</strong> for providing the above approach to solve this problem.</p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>
<p><br /></p>
<div id="source-58" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/how-to-print-maximum-number-of-a-using-given-four-keys/" class="uri">http://www.geeksforgeeks.org/how-to-print-maximum-number-of-a-using-given-four-keys/</a></p>
<p><span>Category: <a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/dynamic-programming/">Dynamic Programming</a></span></p>
<p><br /></p>
<p>Post navigation</p>
<p><span class="nav-previous"><a href="http://www.geeksforgeeks.org/coupondunia-interview-experience-set-2-fresher/"><span class="meta-nav">←</span> CouponDunia Interview Experience | Set 2 (Fresher)</a></span> <span class="nav-next"><a href="http://www.geeksforgeeks.org/amazon-interview-experience-set-179-for-sde-1/">Amazon Interview Experience | Set 179 (For SDE-1) <span class="meta-nav">→</span></a></span></p>
<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</p>
</div>
</div>
</body>
</html>


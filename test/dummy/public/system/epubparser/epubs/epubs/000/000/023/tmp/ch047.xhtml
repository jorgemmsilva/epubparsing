<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Program for nth Catalan Number</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="program-for-nth-catalan-number" class="section level1">
<h1>Program for nth Catalan Number</h1>
<p>Catalan numbers are a sequence of natural numbers that occurs in many interesting counting problems like following.<span id="more-129065"></span></p>
<p><strong>1)</strong> Count the number of expressions containing n pairs of parentheses which are correctly matched. For n = 3, possible expressions are ((())), ()(()), ()()(), (())(), (()()).</p>
<p><strong>2)</strong> Count the number of possible Binary Search Trees with n keys (See <a href="http://www.geeksforgeeks.org/g-fact-18/">this</a>)</p>
<p><strong>3)</strong> Count the number of full binary trees (A rooted binary tree is full if every vertex has either two children or no children) with n+1 leaves.</p>
<p>See <a href="http://en.wikipedia.org/wiki/Catalan_number#Applications_in_combinatorics">this</a>for more applications.</p>
<p>The first few Catalan numbers for n = 0, 1, 2, 3, … are <strong>1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, …</strong></p>
<p><strong>Recursive Solution</strong><br /> Catalan numbers satisfy the following recursive formula.<br /> <a href="http://d2hc1qfcrygj4j.cloudfront.net//wp-content/uploads/catalan.png"><img src="media/file25.png" alt="catalan" /></a></p>
<p>Following is C++ implementation of above recursive formula.</p>
<pre><code> 
#include&lt;iostream&gt;
using namespace std;

// A recursive function to find nth catalan number
unsigned long int catalan(unsigned int n)
{
    // Base case
    if (n &lt;= 1) return 1;

    // catalan(n) is sum of catalan(i)*catalan(n-i-1)
    unsigned long int res = 0;
    for (int i=0; i&lt;n; i++)
        res += catalan(i)*catalan(n-i-1);

    return res;
}

// Driver program to test above function
int main()
{
    for (int i=0; i&lt;10; i++)
        cout &lt;&lt; catalan(i) &lt;&lt; &quot; &quot;;
    return 0;
}
 </code></pre>
<p>Output :</p>
<pre><code> 1 1 2 5 14 42 132 429 1430 4862 </code></pre>
<p>Time complexity of above implementation is equivalent to nth catalan number.<br /> <a href="http://d2hc1qfcrygj4j.cloudfront.net//wp-content/uploads/catalan2.png"><img src="media/file26.png" alt="catalan2" /></a></p>
<p>The value of nth catalan number is exponential that makes the time complexity exponential.</p>
<p><br /> <strong>Dynamic Programming Solution</strong><br /> We can observe that the above recursive implementation does a lot of repeated work (we can the same by drawing recursion tree). Since there are overlapping subproblems, we can use dynamic programming for this. Following is a Dynamic programming based implementation in C++.</p>
<pre><code> 
#include&lt;iostream&gt;
using namespace std;

// A dynamic programming based function to find nth
// Catalan number
unsigned long int catalanDP(unsigned int n)
{
    // Table to store results of subproblems
    unsigned long int catalan[n+1];

    // Initialize first two values in table
    catalan[0] = catalan[1] = 1;

    // Fill entries in catalan[] using recursive formula
    for (int i=2; i&lt;=n; i++)
    {
        catalan[i] = 0;
        for (int j=0; j&lt;i; j++)
            catalan[i] += catalan[j] * catalan[i-j-1];
    }

    // Return last entry
    return catalan[n];
}

// Driver program to test above function
int main()
{
    for (int i = 0; i &lt; 10; i++)
        cout &lt;&lt; catalanDP(i) &lt;&lt; &quot; &quot;;
    return 0;
}
 </code></pre>
<p>Output:</p>
<pre><code> 1 1 2 5 14 42 132 429 1430 4862  </code></pre>
<p>Time Complexity: Time complexity of above implementation is O(n<sup>2</sup>)</p>
<p><br /> <strong>Using Binomial Coefficient</strong><br /> We can also use the below formula to find nth catalan number in O(n) time.<br /> <a href="http://d2hc1qfcrygj4j.cloudfront.net//wp-content/uploads/catalan3.png"><img src="media/file27.png" alt="catalan3" /></a></p>
<p>We have discussed a<a href="http://www.geeksforgeeks.org/space-and-time-efficient-binomial-coefficient/">O(n) approach to find binomial coefficient nCr</a>.</p>
<pre><code> 
#include&lt;iostream&gt;
using namespace std;

// Returns value of Binomial Coefficient C(n, k)
unsigned long int binomialCoeff(unsigned int n, unsigned int k)
{
    unsigned long int res = 1;

    // Since C(n, k) = C(n, n-k)
    if (k &gt; n - k)
        k = n - k;

    // Calculate value of [n*(n-1)*---*(n-k+1)] / [k*(k-1)*---*1]
    for (int i = 0; i &lt; k; ++i)
    {
        res *= (n - i);
        res /= (i + 1);
    }

    return res;
}

// A Binomial coefficient based function to find nth catalan
// number in O(n) time
unsigned long int catalan(unsigned int n)
{
    // Calculate value of 2nCn
    unsigned long int c = binomialCoeff(2*n, n);

    // return 2nCn/(n+1)
    return c/(n+1);
}

// Driver program to test above functions
int main()
{
    for (int i = 0; i &lt; 10; i++)
        cout &lt;&lt; catalan(i) &lt;&lt; &quot; &quot;;
    return 0;
}
 </code></pre>
<p>Output:</p>
<pre><code> 1 1 2 5 14 42 132 429 1430 4862 </code></pre>
<p>Time Complexity: Time complexity of above implementation is O(n).</p>
<p>We can also use below formula to find nth catalan number in O(n) time.<br /> <a href="http://d2hc1qfcrygj4j.cloudfront.net//wp-content/uploads/catalan4.png"><img src="media/file28.png" alt="catalan4" /></a></p>
<p><strong>References:</strong><br /> <a href="http://en.wikipedia.org/wiki/Catalan_number">http://en.wikipedia.org/wiki/Catalan_number<br /></a><br /> Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>
<p><br /></p>
<div id="source-46" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/program-nth-catalan-number/" class="uri">http://www.geeksforgeeks.org/program-nth-catalan-number/</a></p>
</div>
</div>
</body>
</html>


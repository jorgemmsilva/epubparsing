<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title></title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="toc">
  <h1 id="toc-title">Dynamic Programming</h1>
  <ol class="toc">
    <li id="toc-li-1">
      <a href="ch001.xhtml">Copyright</a>
    </li>
    <li id="toc-li-2">
      <a href="ch002.xhtml">Largest Sum Contiguous Subarray</a>
    </li>
    <li id="toc-li-3">
      <a href="ch003.xhtml">Ugly Numbers</a>
    </li>
    <li id="toc-li-4">
      <a href="ch004.xhtml">Maximum size square sub-matrix with all 1s</a>
    </li>
    <li id="toc-li-5">
      <a href="ch005.xhtml">Program for Fibonacci numbers</a>
    </li>
    <li id="toc-li-6">
      <a href="ch006.xhtml">Dynamic Programming | Set 1 (Overlapping Subproblems Property)</a>
    </li>
    <li id="toc-li-7">
      <a href="ch007.xhtml">Dynamic Programming | Set 2 (Optimal Substructure Property)</a>
    </li>
    <li id="toc-li-8">
      <a href="ch008.xhtml">Dynamic Programming | Set 3 (Longest Increasing Subsequence)</a>
    </li>
    <li id="toc-li-9">
      <a href="ch009.xhtml">Dynamic Programming | Set 4 (Longest Common Subsequence)</a>
    </li>
    <li id="toc-li-10">
      <a href="ch010.xhtml">Dynamic Programming | Set 5 (Edit Distance)</a>
    </li>
    <li id="toc-li-11">
      <a href="ch011.xhtml">Dynamic Programming | Set 6 (Min Cost Path)</a>
    </li>
    <li id="toc-li-12">
      <a href="ch012.xhtml">Length of the longest substring without repeating characters</a>
    </li>
    <li id="toc-li-13">
      <a href="ch013.xhtml">Minimum number of jumps to reach end</a>
    </li>
    <li id="toc-li-14">
      <a href="ch014.xhtml">Dynamic Programming | Set 7 (Coin Change)</a>
    </li>
    <li id="toc-li-15">
      <a href="ch015.xhtml">Dynamic Programming | Set 8 (Matrix Chain Multiplication)</a>
    </li>
    <li id="toc-li-16">
      <a href="ch016.xhtml">Dynamic Programming | Set 9 (Binomial Coefficient)</a>
    </li>
    <li id="toc-li-17">
      <a href="ch017.xhtml">Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)</a>
    </li>
    <li id="toc-li-18">
      <a href="ch018.xhtml">Dynamic Programming | Set 11 (Egg Dropping Puzzle)</a>
    </li>
    <li id="toc-li-19">
      <a href="ch019.xhtml">Dynamic Programming | Set 12 (Longest Palindromic Subsequence)</a>
    </li>
    <li id="toc-li-20">
      <a href="ch020.xhtml">Dynamic Programming | Set 13 (Cutting a Rod)</a>
    </li>
    <li id="toc-li-21">
      <a href="ch021.xhtml">Dynamic Programming | Set 14 (Maximum Sum Increasing Subsequence)</a>
    </li>
    <li id="toc-li-22">
      <a href="ch022.xhtml">Dynamic Programming | Set 15 (Longest Bitonic Subsequence)</a>
    </li>
    <li id="toc-li-23">
      <a href="ch023.xhtml">Dynamic Programming | Set 16 (Floyd Warshall Algorithm)</a>
    </li>
    <li id="toc-li-24">
      <a href="ch024.xhtml">Dynamic Programming | Set 17 (Palindrome Partitioning)</a>
    </li>
    <li id="toc-li-25">
      <a href="ch025.xhtml">Dynamic Programming | Set 18 (Partition problem)</a>
    </li>
    <li id="toc-li-26">
      <a href="ch026.xhtml">Dynamic Programming | Set 19 (Word Wrap Problem)</a>
    </li>
    <li id="toc-li-27">
      <a href="ch027.xhtml">Dynamic Programming | Set 20 (Maximum Length Chain of Pairs)</a>
    </li>
    <li id="toc-li-28">
      <a href="ch028.xhtml">Dynamic Programming | Set 21 (Variations of LIS)</a>
    </li>
    <li id="toc-li-29">
      <a href="ch029.xhtml">Dynamic Programming | Set 22 (Box Stacking Problem)</a>
    </li>
    <li id="toc-li-30">
      <a href="ch030.xhtml">Longest Palindromic Substring | Set 1</a>
    </li>
    <li id="toc-li-31">
      <a href="ch031.xhtml">Dynamic Programming | Set 24 (Optimal Binary Search Tree)</a>
    </li>
    <li id="toc-li-32">
      <a href="ch032.xhtml">Dynamic Programming</a>
    </li>
    <li id="toc-li-33">
      <a href="ch033.xhtml">Dynamic Programming | Set 26 (Largest Independent Set Problem)</a>
    </li>
    <li id="toc-li-34">
      <a href="ch034.xhtml">Dynamic Programming | Set 27 (Maximum sum rectangle in a 2D matrix)</a>
    </li>
    <li id="toc-li-35">
      <a href="ch035.xhtml">Dynamic Programming | Set 28 (Minimum insertions to form a palindrome)</a>
    </li>
    <li id="toc-li-36">
      <a href="ch036.xhtml">Dynamic Programming | Set 29 (Longest Common Substring)</a>
    </li>
    <li id="toc-li-37">
      <a href="ch037.xhtml">Dynamic Programming | Set 30 (Dice Throw)</a>
    </li>
    <li id="toc-li-38">
      <a href="ch038.xhtml">Dynamic Programming | Set 31 (Optimal Strategy for a Game)</a>
    </li>
    <li id="toc-li-39">
      <a href="ch039.xhtml">Dynamic Programming | Set 32 (Word Break Problem)</a>
    </li>
    <li id="toc-li-40">
      <a href="ch040.xhtml">Dynamic Programming | Set 33 (Find if a string is interleaved of two other strings)</a>
    </li>
    <li id="toc-li-41">
      <a href="ch041.xhtml">Dynamic Programming | Set 34 (Assembly Line Scheduling)</a>
    </li>
    <li id="toc-li-42">
      <a href="ch042.xhtml">Dynamic Programming | Set 35 (Longest Arithmetic Progression)</a>
    </li>
    <li id="toc-li-43">
      <a href="ch043.xhtml">Dynamic Programming | Set 36 (Maximum Product Cutting)</a>
    </li>
    <li id="toc-li-44">
      <a href="ch044.xhtml">Travelling Salesman Problem | Set 1 (Naive and Dynamic Programming)</a>
    </li>
    <li id="toc-li-45">
      <a href="ch045.xhtml">Count all possible paths from top left to bottom right of a mXn matrix</a>
    </li>
    <li id="toc-li-46">
      <a href="ch046.xhtml">Remove minimum elements from either side such that 2*min becomes more than max</a>
    </li>
    <li id="toc-li-47">
      <a href="ch047.xhtml">Program for nth Catalan Number</a>
    </li>
    <li id="toc-li-48">
      <a href="ch048.xhtml">Count number of binary strings without consecutive 1&#39;s</a>
    </li>
    <li id="toc-li-49">
      <a href="ch049.xhtml">Count Possible Decodings of a given Digit Sequence</a>
    </li>
    <li id="toc-li-50">
      <a href="ch050.xhtml">Count all possible walks from a source to a destination with exactly k edges</a>
    </li>
    <li id="toc-li-51">
      <a href="ch051.xhtml">Shortest path with exactly k edges in a directed and weighted graph</a>
    </li>
    <li id="toc-li-52">
      <a href="ch052.xhtml">Mobile Numeric Keypad Problem</a>
    </li>
    <li id="toc-li-53">
      <a href="ch053.xhtml">Minimum Cost Polygon Triangulation</a>
    </li>
    <li id="toc-li-54">
      <a href="ch054.xhtml">Longest Even Length Substring such that Sum of First and Second Half is same</a>
    </li>
    <li id="toc-li-55">
      <a href="ch055.xhtml">Weighted Job Scheduling</a>
    </li>
    <li id="toc-li-56">
      <a href="ch056.xhtml">Count number of ways to reach a given score in a game</a>
    </li>
    <li id="toc-li-57">
      <a href="ch057.xhtml">Vertex Cover Problem | Set 2 (Dynamic Programming Solution for Tree)</a>
    </li>
    <li id="toc-li-58">
      <a href="ch058.xhtml">Find the minimum cost to reach destination using a train</a>
    </li>
    <li id="toc-li-59">
      <a href="ch059.xhtml">How to print maximum number of A&#39;s using given four keys</a>
    </li>
    <li id="toc-li-60">
      <a href="ch060.xhtml">Maximum profit by buying and selling a share at most twice</a>
    </li>
    <li id="toc-li-61">
      <a href="ch061.xhtml">Count possible ways to construct buildings</a>
    </li>
    <li id="toc-li-62">
      <a href="ch062.xhtml">Compute sum of digits in all numbers from 1 to n</a>
    </li>
    <li id="toc-li-63">
      <a href="ch063.xhtml">Shortest Common Supersequence</a>
    </li>
    <li id="toc-li-64">
      <a href="ch064.xhtml">Collect maximum points in a grid using two traversals</a>
    </li>
    <li id="toc-li-65">
      <a href="ch065.xhtml">Find minimum number of coins that make a given value</a>
    </li>
    <li id="toc-li-66">
      <a href="ch066.xhtml">Minimum number of squares whose sum equals to given number n</a>
    </li>
    <li id="toc-li-67">
      <a href="ch067.xhtml">Tiling Problem</a>
    </li>
    <li id="toc-li-68">
      <a href="ch068.xhtml">Find length of the longest consecutive path from a given starting character</a>
    </li>
    <li id="toc-li-69">
      <a href="ch069.xhtml">Total number of non-decreasing numbers with n digits</a>
    </li>
    <li id="toc-li-70">
      <a href="ch070.xhtml">Minimum Initial Points to Reach Destination</a>
    </li>
    <li id="toc-li-71">
      <a href="ch071.xhtml">Count of n digit numbers whose sum of digits equals to given sum</a>
    </li>
    <li id="toc-li-72">
      <a href="ch072.xhtml">Count total number of N digit numbers such that the difference between sum of even and odd digits is 1</a>
    </li>
    <li id="toc-li-73">
      <a href="ch073.xhtml">Maximum weight transformation of a given string</a>
    </li>
    <li id="toc-li-74">
      <a href="ch074.xhtml">Bitmasking and Dynamic Programming | Set 1 (Count ways to assign unique cap to every person)</a>
    </li>
    <li id="toc-li-75">
      <a href="ch075.xhtml">Longest Repeating Subsequence</a>
    </li>
    <li id="toc-li-76">
      <a href="ch076.xhtml">Count even length binary sequences with same sum of first and second half bits</a>
    </li>
    <li id="toc-li-77">
      <a href="ch077.xhtml">Count number of ways to cover a distance</a>
    </li>
  </ol>
</div>
</body>
</html>


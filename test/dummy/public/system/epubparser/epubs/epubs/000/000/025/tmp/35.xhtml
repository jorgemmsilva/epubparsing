<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <title>Dynamic Programming</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css" />
</head>
<body>
<div id="dynamic-programming" class="section level1">
<h1>Dynamic Programming</h1>
<p>Given a set of non-negative integers, and a value <em>sum</em>, determine if there is a subset of the given set with sum equal to given <em>sum</em>.<span id="more-28860"></span></p>
<pre><code> 
Examples: set[] = {3, 34, 4, 12, 5, 2}, sum = 9
Output:  True  //There is a subset (4, 5) with sum 9.
 </code></pre>
<p>Let isSubSetSum(int set[], int n, int sum) be the function to find whether there is a subset of set[] with sum equal to <em>sum</em>. n is the number of elements in set[].</p>
<p>The isSubsetSum problem can be divided into two subproblems<br /> …a) Include the last element, recur for n = n-1, sum = sum – set[n-1]<br /> …b) Exclude the last element, recur for n = n-1.<br /> If any of the above the above subproblems return true, then return true.</p>
<p>Following is the recursive formula for isSubsetSum() problem.</p>
<pre><code> 
isSubsetSum(set, n, sum) = isSubsetSum(set, n-1, sum) || 
                           isSubsetSum(arr, n-1, sum-set[n-1])
Base Cases:
isSubsetSum(set, n, sum) = false, if sum &gt; 0 and n == 0
isSubsetSum(set, n, sum) = true, if sum == 0 
 </code></pre>
<p>Following is naive recursive implementation that simply follows the recursive structure mentioned above.</p>
<pre><code> 
// A recursive solution for subset sum problem
#include &lt;stdio.h&gt;

// Returns true if there is a subset of set[] with sun equal to given sum
bool isSubsetSum(int set[], int n, int sum)
{
   // Base Cases
   if (sum == 0)
     return true;
   if (n == 0 &amp;&amp; sum != 0)
     return false;

   // If last element is greater than sum, then ignore it
   if (set[n-1] &gt; sum)
     return isSubsetSum(set, n-1, sum);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(set, n-1, sum) || isSubsetSum(set, n-1, sum-set[n-1]);
}

// Driver program to test above function
int main()
{
  int set[] = {3, 34, 4, 12, 5, 2};
  int sum = 9;
  int n = sizeof(set)/sizeof(set[0]);
  if (isSubsetSum(set, n, sum) == true)
     printf(&quot;Found a subset with given sum&quot;);
  else
     printf(&quot;No subset with given sum&quot;);
  return 0;
}
 </code></pre>
<p>Output:</p>
<pre><code>  Found a subset with given sum  </code></pre>
<p>The above solution may try all subsets of given set in worst case. Therefore time complexity of the above solution is exponential. The problem is in-fact <a href="http://en.wikipedia.org/wiki/NP-complete">NP-Complete</a> (There is no known polynomial time solution for this problem).</p>
<p><strong>We can solve the problem in <a href="http://en.wikipedia.org/wiki/Pseudo-polynomial_time">Pseudo-polynomial time</a> using Dynamic programming.</strong> We create a boolean 2D table subset[][] and fill it in bottom up manner. The value of subset[i][j] will be true if there is a subset of set[0..j-1] with sum equal to i., otherwise false. Finally, we return subset[sum][n]</p>
<pre><code> 
// A Dynamic Programming solution for subset sum problem
#include &lt;stdio.h&gt;

// Returns true if there is a subset of set[] with sun equal to given sum
bool isSubsetSum(int set[], int n, int sum)
{
    // The value of subset[i][j] will be true if there is a subset of set[0..j-1]
    //  with sum equal to i
    bool subset[sum+1][n+1];

    // If sum is 0, then answer is true
    for (int i = 0; i &lt;= n; i++)
      subset[0][i] = true;

    // If sum is not 0 and set is empty, then answer is false
    for (int i = 1; i &lt;= sum; i++)
      subset[i][0] = false;

     // Fill the subset table in botton up manner
     for (int i = 1; i &lt;= sum; i++)
     {
       for (int j = 1; j &lt;= n; j++)
       {
         subset[i][j] = subset[i][j-1];
         if (i &gt;= set[j-1])
           subset[i][j] = subset[i][j] || subset[i - set[j-1]][j-1];
       }
     }

    /* // uncomment this code to print table
     for (int i = 0; i &lt;= sum; i++)
     {
       for (int j = 0; j &lt;= n; j++)
          printf (&quot;%4d&quot;, subset[i][j]);
       printf(&quot;\n&quot;);
     } */

     return subset[sum][n];
}

// Driver program to test above function
int main()
{
  int set[] = {3, 34, 4, 12, 5, 2};
  int sum = 9;
  int n = sizeof(set)/sizeof(set[0]);
  if (isSubsetSum(set, n, sum) == true)
     printf(&quot;Found a subset with given sum&quot;);
  else
     printf(&quot;No subset with given sum&quot;);
  return 0;
}
 </code></pre>
<p>Output:</p>
<pre><code> Found a subset with given sum </code></pre>
<p>Time complexity of the above solution is O(sum*n).</p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
<p><br /></p>
<div id="source-31" class="section level3">
<h3>Source</h3>
<p><a href="http://www.geeksforgeeks.org/dynamic-programming-subset-sum-problem/" class="uri">http://www.geeksforgeeks.org/dynamic-programming-subset-sum-problem/</a></p>
<p><span>Category: <a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/dynamic-programming/">Dynamic Programming</a></span></p>
<p><br /></p>
<p>Post navigation</p>
<p><span class="nav-previous"><a href="http://www.geeksforgeeks.org/nvidia-interview-set-1/"><span class="meta-nav">←</span> Nvidia Interview | Set 1</a></span> <span class="nav-next"><a href="http://www.geeksforgeeks.org/measure-1-litre-from-two-vessels-infinite-water-supply/">Measure one litre using two vessels and infinite water supply <span class="meta-nav">→</span></a></span></p>
<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</p>
</div>
</div>
</body>
</html>

